---
- name: Check for required role variables and values
  assert:
    that:
      - bitbucket_sources_owner is defined
      - bitbucket_sources_group is defined
      - bitbucket_sources_key is defined
      - bitbucket_sources_repo_account is defined
      - bitbucket_sources_repo_name is defined
      - bitbucket_sources_dest is defined
      # optional
      #- bitbucket_sources_executable is defined

      - "bitbucket_sources_repo_type in [ 'git', 'hg' ]"

- name: "Ensure user exists: {{ bitbucket_sources_owner }}"
  become: yes
  user:
    name: "{{ bitbucket_sources_owner }}"
  tags: bitbucket_prep

- name: "Ensure group exists: {{ bitbucket_sources_group }}"
  become: yes
  user:
    name: "{{ bitbucket_sources_group }}"
  tags: bitbucket_prep

- name: Ensure .ssh directory exists with appropriate permissions
  become: yes
  become_user: "{{ bitbucket_sources_owner }}"
  file:
    path: "~{{ bitbucket_sources_owner }}/.ssh"
    state: directory
    owner: "{{ bitbucket_sources_owner }}"
    mode: 0700
  tags: bitbucket_prep

- name: Copy the bitbucket access key
  become: yes
  copy:
    src: "{{ bitbucket_sources_key }}"
    dest: "{{ bitbucket_sources_key_dest }}"
    owner: "{{ bitbucket_sources_owner }}"
    # Same mode as .ssh folder for idempotence
    mode: 0700
  when: bitbucket_sources_key_copy
  tags: bitbucket_prep

- name: Ensure bitbucket.org is in known_hosts
  become: yes
  known_hosts:
    host: bitbucket.org
    key: "{{ lookup( 'file', 'pubkeys/bitbucket.org' ) }}"
    path: /etc/ssh/ssh_known_hosts
  tags: bitbucket_prep

- name: Make sure parent directory exists and is writeable
  # Default location is in /opt, so we should become root
  become: yes
  file:
    path: "{{ bitbucket_sources_dest | dirname }}"
    state: directory
    owner: "{{ bitbucket_sources_owner }}"
    group: "{{ bitbucket_sources_group }}"
    mode: "{{ bitbucket_sources_mode }}"
  tags: bitbucket_prep

- name: "Clone or update {{ bitbucket_sources_repo_account }}/{{ bitbucket_sources_repo_name }}.git repo from bitbucket"
  become: yes
  become_user: "{{ bitbucket_sources_owner }}"
  when: bitbucket_sources_repo_type == "git"
  git:
    version: "{{ bitbucket_sources_version | default(omit) }}"
    dest: "{{ bitbucket_sources_dest }}"
    repo: >-
      {{ "ssh://git@%s/%s/%s%s" | format(
      bitbucket_sources_altssh | ternary('altssh.bitbucket.org:443','bitbucket.org'),
      bitbucket_sources_repo_account,
      bitbucket_sources_repo_name,
      bitbucket_sources_altssh | ternary('/', '.git')
      ) }}
    key_file: "{{ bitbucket_sources_key_dest }}"
    executable: "{{ bitbucket_sources_executable | default(omit) }}"
    # No mode option is available. Maybe add umask
    #umask: "0027"
  register: bitbucket_sources_return
  tags: bitbucket_clone

- name: "Clone or update {{ bitbucket_sources_repo_account }}/{{ bitbucket_sources_repo_name }}.hg repo from bitbucket"
  become: yes
  become_user: "{{ bitbucket_sources_owner }}"
  when: bitbucket_sources_repo_type == "hg"
  hg:
    version: "{{ bitbucket_sources_version | default(omit) }}"
    repo: >-
      {{ "ssh://hg@%s/%s/%s/" | format(
      bitbucket_sources_altssh | ternary('altssh.bitbucket.org:443','bitbucket.org'),
      bitbucket_sources_repo_account,
      bitbucket_sources_repo_name
      ) }}
    dest: "{{ bitbucket_sources_dest }}"
    executable: "{{ bitbucket_sources_executable | default(omit) }}"
    #key_file: "{{ bitbucket_sources_key_dest }}"
    #
    # it looks like duplicating the key_file feature of git
    # would require creating an hg wrapper that does one of:
    #  hg -e "ssh -i <keyfile>" $@
    #  hg --ssh "ssh -i <keyfile>" $@
    # And then pass that into executable
  register: bitbucket_sources_return
  tags: bitbucket_clone

